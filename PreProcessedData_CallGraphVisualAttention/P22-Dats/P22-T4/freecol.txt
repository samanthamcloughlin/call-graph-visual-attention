-> Project: "freecol"

-> For each method listed below:
	Step 1: "Start Tracking" on the itrace core as described to you by the study administrator.
	Step 2: Navigate to the method described using the path, method name, and line number; then inspect the project to understand the context as described in the instructions.
	Step 3: Write the description in the space provided. 
	Step 4: When satisfied with the description, "Stop Tracking" in the itrace core.
	Step 5: Move to the next method and repeat steps 1-4. Please, DO NOT edit any project files or source code.


-----------------------------------------------------------------------------------------------------
| 										Project Synopsis:  											|
| 	FreeCol:  FreeCol is a turn-based strategy game based on the old game Colonization, 			|
|	and similar to Civilization. The objective of the game is to create an independent nation.		|
-----------------------------------------------------------------------------------------------------

#####################################---CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session.
-----------------------------------------------------------------------------------------------------

	Method 1: freecol>tools>FlagTest.java> SetColors [line 209]
	Description:
	The method sets the colors of a flag based on the current selection.
	
	It sets the Union Color, Star Color, Decoration Color and Background Colors by determining which buttons were selected for each.
	
	This is useful when updating a flag whenever the user has made a new selection.
	
	
	Rate your confidence in the description on a scale of 1-5: 
	4
	

-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 2: freecol>server>FreeColServer.java> changeServerState [line 349]
	Description:
	The method changes the state of the server to a given server state.
	
	It records the previous state to return, it sets the state to the new state, and ensures that the message handler is set to the input handler if the new state is not the end game state.
	
	This is useful when starting, loading, or ending a game.


	Rate your confidence in the description on a scale of 1-5: 
	4


-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 3: freecol>common>model>FreeColObject.java> compareIds [line 148]
	Description:
	The method compares two FreeColObject objects by their Ids and returns a number representing which is considered "higher."
	
	The Ids are compared as integers if their types are the same. Otherwise the types are compared as strings; If an object or an id is null then the other object is considered higher; if both objects are null then they are equivalent.
	
	This is useful when implementing comparators for different types of FreeColObjects.

	Rate your confidence in the description on a scale of 1-5: 	
	5


-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 4: freecol>common>io>FreeColXMLReader.java> readId [line 219]
	Description:
	
	The method reads the id attribute from the XML input stream.
	
	It read the id as a string, makes sure it is not null, and then camel cases the prefixes for tile item container objects and tile improvement objects.
	
	This is useful when reading objects or attributes from the xml stream
	

	Rate your confidence in the description on a scale of 1-5: 
	3
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session |
-----------------------------------------------------------------------------------------------------
#####################################-RE-CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session |
-----------------------------------------------------------------------------------------------------

	Method 5: freecol>client>gui>SwingGUI.java> updateUnitPath [line 443]
	Description:
	
	This method updates the active unit's path on the game map.
	
	It takes the currently active unit, and if it has a valid destination and is not yet there, it calculates a path to the destination for that unit and returns it.
	
	This is useful when animating a unit traversing to its destination or when clearing a units destination.


	Rate your confidence in the description on a scale of 1-5: 
	4
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------


	Method 6: freecol>common>model>pathfinding>CostDeciders.java> getCost [line 198]
	Description:
	
	This method finds the cost of moving a unit from an old location to new location.
	
	It can run several different cost deciders and will take the maximum cost that is determined by any of them unless any of them find that it is an illegal move or that the cost is infinite.
	
	This is useful when determining the cost of a new move.


	Rate your confidence in the description on a scale of 1-5: 
	3
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------



	Method 7: freecol>client>gui>mapviewer>CanvasMapViewer.java> drawRenderingTimeStrings [line 121]
	Description:
	
	The method calculates and displays the rendering time statistics for the map in frames per second.
	
	It calculates the most recent render time and includes it in a running average calculation if it was for the entire map before calculating them all in fps and writing them to the screen.
	
	This is useful when rendering the map on screen when using the debugger mode.


	Rate your confidence in the description on a scale of 1-5: 
	4
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 8: freecol>common>model>Monarch.java> initializeCaches [line 209]
	Description:

	The method initializes the data structures for a monarch in the game.
	
	It reads the game specification and initializes the relevant data structure to hold the monarchs units and millitary roles.
	
	This is useful when staring the game.

	Rate your confidence in the description on a scale of 1-5: 
	3
	
	

	
Congratulations, you have completed the project! Please remember to "Stop Tracking".

Please describe any issues you faced while completing tasks for this project:



Please call the administrator!
