CostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        Location.getTile()(2 usages)  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
            TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
        Unit.getType()(2 usages)  (net.sf.freecol.common.model)
        UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
            UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
        Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
            FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                Game.getSpecification()(2 usages)  (net.sf.freecol.common.model)
            OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                OptionContainer.getOption(String, Class<T>)  (net.sf.freecol.common.option)
                    Specification.getOption(String, Class<T>)  (net.sf.freecol.common.model)
                    OptionGroup.getOption(String, Class<T>)  (net.sf.freecol.common.option)
                IntegerOption.getValue()  (net.sf.freecol.common.option)
            Unit.getOwner()  (net.sf.freecol.common.model)
            FreeColGameObject.getGame()  (net.sf.freecol.common.model)
            Game.getTurn()  (net.sf.freecol.common.model)
            FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.getFeatureContainer()  (net.sf.freecol.common.model)
                    FeatureContainer.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    Building.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    Unit.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
                    FeatureContainer.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
        Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
            FreeColGameObject.getGame()  (net.sf.freecol.common.model)
            Game.getTurn()  (net.sf.freecol.common.model)
            UnitType.getMovement()  (net.sf.freecol.common.model)
            FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.getFeatureContainer()  (net.sf.freecol.common.model)
                    FeatureContainer.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    Building.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    Unit.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
                    FeatureContainer.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
        Tile.isExplored()  (net.sf.freecol.common.model)
        Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
            Unit.isNaval()  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                Player.canMoveToEurope()  (net.sf.freecol.common.model)
                    Player.getEurope()  (net.sf.freecol.common.model)
                Unit.isDamagedAndUnderForcedRepair()  (net.sf.freecol.common.model)
                    Unit.isDamaged()  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    Specification.hasAbility(String)  (net.sf.freecol.common.model)
                Tile.isLand()  (net.sf.freecol.common.model)
                    TileType.isWater()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.canCarryGoods()  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Unit.allowContact(Settlement)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    IndianSettlement.getContactLevel(Player)  (net.sf.freecol.common.model)
                    Unit.hasGoodsCargo()  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getBoolean(String)  (net.sf.freecol.common.option)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
            Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Tile.isLand()  (net.sf.freecol.common.model)
                    TileType.isWater()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()(3 usages)  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Unit.allowMoveFrom(Tile)(5 usages)  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Player.isREF()  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getBoolean(String)  (net.sf.freecol.common.option)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                Player.isEuropean()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.canCarryGoods()  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Unit.allowContact(Settlement)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    IndianSettlement.getContactLevel(Player)  (net.sf.freecol.common.model)
                    Unit.hasGoodsCargo()  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getBoolean(String)  (net.sf.freecol.common.option)
                Unit.isColonist()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)(2 usages)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)(3 usages)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Unit.getMissionaryMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Unit.allowContact(Settlement)  (net.sf.freecol.common.model)
                    Unit.allowMoveFrom(Tile)  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Player.missionsBanned(Player)  (net.sf.freecol.common.model)
                Unit.getLearnMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Unit.allowContact(Settlement)  (net.sf.freecol.common.model)
                    Unit.allowMoveFrom(Tile)  (net.sf.freecol.common.model)
                    Unit.getUnitChange(String)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                UnitLocation.canAdd(Locatable)  (net.sf.freecol.common.model)
                    UnitLocation.getNoAddReason(Locatable)  (net.sf.freecol.common.model)
                    Tile.canAdd(Locatable)  (net.sf.freecol.common.model)
                    Europe.canAdd(Locatable)  (net.sf.freecol.common.model)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Unit.isOnCarrier()  (net.sf.freecol.common.model)
            Unit.getLocation()  (net.sf.freecol.common.model)
        BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
            Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                Tile.getType()  (net.sf.freecol.common.model)
                TileType.getBasicMoveCost()  (net.sf.freecol.common.model)
                Tile.isLand()  (net.sf.freecol.common.model)
                    TileType.isWater()  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Tile.getTileItemContainer()  (net.sf.freecol.common.model)
                TileItemContainer.getMoveCost(Tile, Tile, int)  (net.sf.freecol.common.model)
                    TileItemContainer.getTileItems()  (net.sf.freecol.common.model)
                    TileImprovement.isComplete()  (net.sf.freecol.common.model)
                    CollectionUtils.transform(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.getDirection(Tile)  (net.sf.freecol.common.model)
                    TileImprovement.getMoveCost(Direction, int)  (net.sf.freecol.common.model)
                Unit.isBeached(Tile)  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.hasSettlement()  (net.sf.freecol.common.model)
            Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                UnitType.getMovement()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
        TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getType()  (net.sf.freecol.common.model)
                    TileType.getBasicMoveCost()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Tile.getTileItemContainer()  (net.sf.freecol.common.model)
                    TileItemContainer.getMoveCost(Tile, Tile, int)  (net.sf.freecol.common.model)
                    Unit.isBeached(Tile)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
        AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.isExplored()  (net.sf.freecol.common.model)
                Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getSettlement()  (net.sf.freecol.common.model)
                Map.getSettlement()  (net.sf.freecol.common.model)
                UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Unit.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getSettlement()  (net.sf.freecol.common.model)
            Settlement.getOwner()  (net.sf.freecol.common.model)
            Unit.getOwner()  (net.sf.freecol.common.model)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.isExplored()  (net.sf.freecol.common.model)
                Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Unit.getOwner()  (net.sf.freecol.common.model)
            Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                Player.isEuropean()  (net.sf.freecol.common.model)
                Tile.isExplored()  (net.sf.freecol.common.model)
                Tile.getCachedTile(Player)  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
        AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                    CollectionUtils.first_internal(Stream<T>, T)  (net.sf.freecol.common.util)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Unit.getTradeRoute()  (net.sf.freecol.common.model)
            Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.findTileItem(Predicate<TileItem>)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Player.owns(Ownable)  (net.sf.freecol.common.model)
                Ownable.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    TradeRoute.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    Goods.getOwner()  (net.sf.freecol.common.model)
                    Tile.getOwner()  (net.sf.freecol.common.model)
                    GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Market.getOwner()  (net.sf.freecol.common.model)
                    Europe.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                    FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
            Unit.isNaval()  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
            Player.atWarWith(Player)  (net.sf.freecol.common.model)
                Player.getStance(Player)  (net.sf.freecol.common.model)
                    FreeColObject.getId()(2 usages)  (net.sf.freecol.common.model)
            Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                UnitType.isOffensive()  (net.sf.freecol.common.model)
                    UnitType.getBaseOffence()  (net.sf.freecol.common.model)
                Unit.getRole()  (net.sf.freecol.common.model)
                Role.isOffensive()  (net.sf.freecol.common.model)
                    FreeColObject.hasModifier(String)  (net.sf.freecol.common.model)
            Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getMap()  (net.sf.freecol.common.model)
                    Map.getCircleTiles(Tile, boolean, int)  (net.sf.freecol.common.model)
            UnitLocation.getUnits()  (net.sf.freecol.common.model)
                Colony.getUnits()  (net.sf.freecol.common.model)
                    Colony.getCurrentWorkLocations()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Stream<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.isLandLocked()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
    Anonymous in trivialCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        Location.getTile()  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
    Anonymous in legalTileCountDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        Location.getTile()(2 usages)  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        Unit.isTileAccessible(Tile)  (net.sf.freecol.common.model)
            Unit.isNaval()  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Tile.isLand()(2 usages)  (net.sf.freecol.common.model)
                TileType.isWater()  (net.sf.freecol.common.model)
            Tile.hasSettlement()  (net.sf.freecol.common.model)
            Unit.getOwner()  (net.sf.freecol.common.model)
            Tile.getSettlement()  (net.sf.freecol.common.model)
            Player.owns(Ownable)  (net.sf.freecol.common.model)
                Ownable.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    TradeRoute.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    Goods.getOwner()  (net.sf.freecol.common.model)
                    Tile.getOwner()  (net.sf.freecol.common.model)
                    GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Market.getOwner()  (net.sf.freecol.common.model)
                    Europe.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                    FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
    Anonymous in getComposedCostDecider() in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        CostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.isExplored()  (net.sf.freecol.common.model)
                Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Anonymous in trivialCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Anonymous in legalTileCountDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.isTileAccessible(Tile)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Tile.isLand()(2 usages)  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
            Anonymous in getComposedCostDecider() in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                CostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Anonymous in trivialCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Anonymous in legalTileCountDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Anonymous in getComposedCostDecider() in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Tile.getCachedTile(Player)  (net.sf.freecol.common.model)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        Location.getTile()(4 usages)  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
            Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                Tile.getType()  (net.sf.freecol.common.model)
                TileType.getBasicMoveCost()  (net.sf.freecol.common.model)
                Tile.isLand()  (net.sf.freecol.common.model)
                    TileType.isWater()  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Tile.getTileItemContainer()  (net.sf.freecol.common.model)
                TileItemContainer.getMoveCost(Tile, Tile, int)  (net.sf.freecol.common.model)
                    TileItemContainer.getTileItems()  (net.sf.freecol.common.model)
                    TileImprovement.isComplete()  (net.sf.freecol.common.model)
                    CollectionUtils.transform(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.getDirection(Tile)  (net.sf.freecol.common.model)
                    TileImprovement.getMoveCost(Direction, int)  (net.sf.freecol.common.model)
                Unit.isBeached(Tile)  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.hasSettlement()  (net.sf.freecol.common.model)
            Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                UnitType.getMovement()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Unit.getType()(2 usages)  (net.sf.freecol.common.model)
            UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    Game.getSpecification()(2 usages)  (net.sf.freecol.common.model)
                OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    OptionContainer.getOption(String, Class<T>)  (net.sf.freecol.common.option)
                    IntegerOption.getValue()  (net.sf.freecol.common.option)
                Unit.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
            Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                UnitType.getMovement()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
            Tile.isExplored()  (net.sf.freecol.common.model)
            Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                    Player.canMoveToEurope()  (net.sf.freecol.common.model)
                    Unit.isDamagedAndUnderForcedRepair()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()(3 usages)  (net.sf.freecol.common.model)
                    Unit.allowMoveFrom(Tile)(5 usages)  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    Unit.isColonist()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)(3 usages)  (net.sf.freecol.common.model)
                    Unit.getMissionaryMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Unit.getLearnMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    UnitLocation.canAdd(Locatable)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            Unit.isOnCarrier()  (net.sf.freecol.common.model)
                Unit.getLocation()  (net.sf.freecol.common.model)
            BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getType()  (net.sf.freecol.common.model)
                    TileType.getBasicMoveCost()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Tile.getTileItemContainer()  (net.sf.freecol.common.model)
                    TileItemContainer.getMoveCost(Tile, Tile, int)  (net.sf.freecol.common.model)
                    Unit.isBeached(Tile)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
            TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Tile.getCachedTile(Player)  (net.sf.freecol.common.model)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Location.getSettlement()  (net.sf.freecol.common.model)
            Map.getSettlement()  (net.sf.freecol.common.model)
            UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Unit.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getSettlement()  (net.sf.freecol.common.model)
            WorkLocation.getSettlement()  (net.sf.freecol.common.model)
            Tile.getSettlement()  (net.sf.freecol.common.model)
            Unit.getSettlement()  (net.sf.freecol.common.model)
                Unit.getLocation()  (net.sf.freecol.common.model)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
            Settlement.getSettlement()  (net.sf.freecol.common.model)
        Settlement.getOwner()  (net.sf.freecol.common.model)
        Unit.getOwner()  (net.sf.freecol.common.model)
        AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                    CollectionUtils.first_internal(Stream<T>, T)  (net.sf.freecol.common.util)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Unit.getTradeRoute()  (net.sf.freecol.common.model)
            Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.findTileItem(Predicate<TileItem>)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Player.owns(Ownable)  (net.sf.freecol.common.model)
                Ownable.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    TradeRoute.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    Goods.getOwner()  (net.sf.freecol.common.model)
                    Tile.getOwner()  (net.sf.freecol.common.model)
                    GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Market.getOwner()  (net.sf.freecol.common.model)
                    Europe.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                    FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
            Unit.isNaval()  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
            Player.atWarWith(Player)  (net.sf.freecol.common.model)
                Player.getStance(Player)  (net.sf.freecol.common.model)
                    FreeColObject.getId()(2 usages)  (net.sf.freecol.common.model)
            Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                UnitType.isOffensive()  (net.sf.freecol.common.model)
                    UnitType.getBaseOffence()  (net.sf.freecol.common.model)
                Unit.getRole()  (net.sf.freecol.common.model)
                Role.isOffensive()  (net.sf.freecol.common.model)
                    FreeColObject.hasModifier(String)  (net.sf.freecol.common.model)
            Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getMap()  (net.sf.freecol.common.model)
                    Map.getCircleTiles(Tile, boolean, int)  (net.sf.freecol.common.model)
            UnitLocation.getUnits()  (net.sf.freecol.common.model)
                Colony.getUnits()  (net.sf.freecol.common.model)
                    Colony.getCurrentWorkLocations()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Stream<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.isLandLocked()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Unit.getType()(2 usages)  (net.sf.freecol.common.model)
            UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    Game.getSpecification()(2 usages)  (net.sf.freecol.common.model)
                OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    OptionContainer.getOption(String, Class<T>)  (net.sf.freecol.common.option)
                    IntegerOption.getValue()  (net.sf.freecol.common.option)
                Unit.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
            Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                Game.getTurn()  (net.sf.freecol.common.model)
                UnitType.getMovement()  (net.sf.freecol.common.model)
                FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.getModifiers(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.applyModifiers(float, Turn, Stream<Modifier>)  (net.sf.freecol.common.model)
            Tile.isExplored()  (net.sf.freecol.common.model)
            Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                    Player.canMoveToEurope()  (net.sf.freecol.common.model)
                    Unit.isDamagedAndUnderForcedRepair()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getOwner()(3 usages)  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()(3 usages)  (net.sf.freecol.common.model)
                    Unit.allowMoveFrom(Tile)(5 usages)  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.isTradingUnit()  (net.sf.freecol.common.model)
                    Unit.getTradeMoveType(Settlement)  (net.sf.freecol.common.model)
                    Unit.isColonist()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)(3 usages)  (net.sf.freecol.common.model)
                    Unit.getMissionaryMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Unit.getLearnMoveType(Tile, Settlement)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    UnitLocation.canAdd(Locatable)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            Unit.isOnCarrier()  (net.sf.freecol.common.model)
                Unit.getLocation()  (net.sf.freecol.common.model)
            BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getType()  (net.sf.freecol.common.model)
                    TileType.getBasicMoveCost()  (net.sf.freecol.common.model)
                    Tile.isLand()  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Tile.getTileItemContainer()  (net.sf.freecol.common.model)
                    TileItemContainer.getMoveCost(Tile, Tile, int)  (net.sf.freecol.common.model)
                    Unit.isBeached(Tile)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    Tile.hasSettlement()  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
            TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                    Player.isEuropean()  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Tile.getCachedTile(Player)  (net.sf.freecol.common.model)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Location.getTile()  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        Unit.getOwner()  (net.sf.freecol.common.model)
        Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
            Player.isEuropean()  (net.sf.freecol.common.model)
            Tile.isExplored()  (net.sf.freecol.common.model)
            Tile.getCachedTile(Player)  (net.sf.freecol.common.model)
                Player.isEuropean()  (net.sf.freecol.common.model)
    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    TileType.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getSpecification()  (net.sf.freecol.common.model)
                    OptionContainer.getInteger(String)  (net.sf.freecol.common.option)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getTurn()  (net.sf.freecol.common.model)
                    UnitType.getMovement()  (net.sf.freecol.common.model)
                    FreeColObject.apply(float, Turn, String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.isExplored()  (net.sf.freecol.common.model)
                Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    Unit.getNavalMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.getLandMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    Unit.getMoveCost(Tile, Tile, int)(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()  (net.sf.freecol.common.model)
                TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(4 usages)  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.isExploredBy(Player)  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getSettlement()  (net.sf.freecol.common.model)
                Map.getSettlement()  (net.sf.freecol.common.model)
                UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Unit.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getLocation()  (net.sf.freecol.common.model)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getSettlement()  (net.sf.freecol.common.model)
            Settlement.getOwner()  (net.sf.freecol.common.model)
            Unit.getOwner()  (net.sf.freecol.common.model)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Location.getTile()  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
            UnitLocation.getUnits()  (net.sf.freecol.common.model)
                Colony.getUnits()  (net.sf.freecol.common.model)
                    Colony.getCurrentWorkLocations()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Stream<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                CollectionUtils.first_internal(Stream<T>, T)  (net.sf.freecol.common.util)
        Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
        Unit.getTradeRoute()  (net.sf.freecol.common.model)
        Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
            TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                TileItemContainer.findTileItem(Predicate<TileItem>)  (net.sf.freecol.common.model)
                    CollectionUtils.find(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Unit.getTradeRoute()  (net.sf.freecol.common.model)
                Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Player.owns(Ownable)  (net.sf.freecol.common.model)
                Ownable.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    TradeRoute.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    Goods.getOwner()  (net.sf.freecol.common.model)
                    Tile.getOwner()  (net.sf.freecol.common.model)
                    GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Market.getOwner()  (net.sf.freecol.common.model)
                    Europe.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                    FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
            Unit.isNaval()  (net.sf.freecol.common.model)
                UnitType.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
            Player.atWarWith(Player)  (net.sf.freecol.common.model)
                Player.getStance(Player)  (net.sf.freecol.common.model)
                    FreeColObject.getId()(2 usages)  (net.sf.freecol.common.model)
            Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                UnitType.isOffensive()  (net.sf.freecol.common.model)
                    UnitType.getBaseOffence()  (net.sf.freecol.common.model)
                Unit.getRole()  (net.sf.freecol.common.model)
                Role.isOffensive()  (net.sf.freecol.common.model)
                    FreeColObject.hasModifier(String)  (net.sf.freecol.common.model)
            Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getMap()  (net.sf.freecol.common.model)
                    Map.getCircleTiles(Tile, boolean, int)  (net.sf.freecol.common.model)
            UnitLocation.getUnits()  (net.sf.freecol.common.model)
                Colony.getUnits()  (net.sf.freecol.common.model)
                    Colony.getCurrentWorkLocations()  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Stream<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                Tile.getSettlement()  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.isLandLocked()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
        AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
            AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                BaseCostDecider.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()(2 usages)  (net.sf.freecol.common.model)
                    Tile.isDirectlyHighSeasConnected()  (net.sf.freecol.common.model)
                    Unit.getType()(2 usages)  (net.sf.freecol.common.model)
                    UnitType.canMoveToHighSeas()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getSailTurns()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getInitialMovesLeft()(4 usages)  (net.sf.freecol.common.model)
                    Tile.isExplored()  (net.sf.freecol.common.model)
                    Unit.getSimpleMoveType(Tile, Tile)  (net.sf.freecol.common.model)
                    Unit.isOnCarrier()  (net.sf.freecol.common.model)
                    BaseCostDecider.adjust(Unit, Tile, Tile, int)  (net.sf.freecol.common.model.pathfinding)
                    TileCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    ServerBaseCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getSettlement()  (net.sf.freecol.common.model)
                    Map.getSettlement()  (net.sf.freecol.common.model)
                    UnitLocation.getSettlement()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Unit.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Unit.isNaval()  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Location.getTile()  (net.sf.freecol.common.model)
                Map.getTile()  (net.sf.freecol.common.model)
                UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.first(Stream<T>)  (net.sf.freecol.common.util)
                    CollectionUtils.first_internal(Stream<T>, T)  (net.sf.freecol.common.util)
            Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
            Unit.getTradeRoute()  (net.sf.freecol.common.model)
            Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                TileItemContainer.getLostCityRumour()  (net.sf.freecol.common.model)
                    TileItemContainer.findTileItem(Predicate<TileItem>)  (net.sf.freecol.common.model)
            AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                AvoidSettlementsAndBlockingUnitsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    AvoidSettlementsCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                    Location.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getFirstUnit()  (net.sf.freecol.common.model)
                    Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                    Unit.getTradeRoute()  (net.sf.freecol.common.model)
                    Tile.hasLostCityRumour()  (net.sf.freecol.common.model)
                    AvoidNavalDangerCostDecider in CostDeciders.getCost(Unit, Location, Location, int)  (net.sf.freecol.common.model.pathfinding)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
                Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                Unit.isNaval()  (net.sf.freecol.common.model)
                    UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    Player.getStance(Player)  (net.sf.freecol.common.model)
                Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
                    UnitType.isOffensive()  (net.sf.freecol.common.model)
                    Unit.getRole()  (net.sf.freecol.common.model)
                    Role.isOffensive()  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                    CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    Tile.getSettlement()  (net.sf.freecol.common.model)
                    Player.owns(Ownable)  (net.sf.freecol.common.model)
                    Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    Player.atWarWith(Player)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                    CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Location.getTile()  (net.sf.freecol.common.model)
            Map.getTile()  (net.sf.freecol.common.model)
            UnitLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
                Tile.getTile()  (net.sf.freecol.common.model)
                Unit.getTile()  (net.sf.freecol.common.model)
                    Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                    Location.getTile()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            WorkLocation.getTile()  (net.sf.freecol.common.model)
                WorkLocation.getSettlement()  (net.sf.freecol.common.model)
                Settlement.getTile()  (net.sf.freecol.common.model)
            Tile.getTile()  (net.sf.freecol.common.model)
            Unit.getTile()  (net.sf.freecol.common.model)
                Unit.getLocation()(2 usages)  (net.sf.freecol.common.model)
                Location.getTile()  (net.sf.freecol.common.model)
                    Map.getTile()  (net.sf.freecol.common.model)
                    UnitLocation.getTile()  (net.sf.freecol.common.model)
                    WorkLocation.getTile()  (net.sf.freecol.common.model)
                    Tile.getTile()  (net.sf.freecol.common.model)
                    Unit.getTile()  (net.sf.freecol.common.model)
                    Settlement.getTile()  (net.sf.freecol.common.model)
            Settlement.getTile()  (net.sf.freecol.common.model)
        Unit.getOwner()(2 usages)  (net.sf.freecol.common.model)
        Player.owns(Ownable)  (net.sf.freecol.common.model)
            Ownable.getOwner()  (net.sf.freecol.common.model)
                Unit.getOwner()  (net.sf.freecol.common.model)
                TradeRoute.getOwner()  (net.sf.freecol.common.model)
                Settlement.getOwner()  (net.sf.freecol.common.model)
                WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getColony()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                Goods.getOwner()  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                Tile.getOwner()  (net.sf.freecol.common.model)
                GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Ownable.getOwner()  (net.sf.freecol.common.model)
                Market.getOwner()  (net.sf.freecol.common.model)
                Europe.getOwner()  (net.sf.freecol.common.model)
            FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)  (net.sf.freecol.common.util)
                    AbstractGoods.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    Scope.equals(Object)  (net.sf.freecol.common.model)
                    StringTemplate.equals(Object)  (net.sf.freecol.common.model)
                    Goods.equals(Object)  (net.sf.freecol.common.model)
                    ValuedAIObject.equals(Object)  (net.sf.freecol.server.ai)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    Operand.equals(Object)  (net.sf.freecol.common.model)
                    ProductionType.equals(Object)  (net.sf.freecol.common.model)
                    Feature.equals(Object)  (net.sf.freecol.common.model)
                    HistoryEvent.equals(Object)  (net.sf.freecol.common.model)
                    ModelMessage.equals(Object)  (net.sf.freecol.common.model)
                    TransportableAIObject.equals(Object)  (net.sf.freecol.server.ai)
                    Wish.equals(Object)  (net.sf.freecol.server.ai)
                    TileImprovementPlan.equals(Object)  (net.sf.freecol.server.ai)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TileTypeChange.equals(Object)  (net.sf.freecol.common.model)
                    Modifier.equals(Object)  (net.sf.freecol.common.model)
                    Ability.equals(Object)  (net.sf.freecol.common.model)
                    ModOption.equals(Object)  (net.sf.freecol.common.option)
                    AIGoods.equals(Object)  (net.sf.freecol.server.ai)
                    AIUnit.equals(Object)  (net.sf.freecol.server.ai)
                    GoodsWish.equals(Object)  (net.sf.freecol.server.ai)
                    WorkerWish.equals(Object)  (net.sf.freecol.server.ai)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
                Game.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)(2 usages)  (net.sf.freecol.common.util)
                    FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
                TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                ServerGame.equals(Object)  (net.sf.freecol.server.model)
                UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)  (net.sf.freecol.common.util)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)  (net.sf.freecol.common.util)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
                StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)(2 usages)  (net.sf.freecol.common.util)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    Utils.equals(T, T)  (net.sf.freecol.common.util)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
        Unit.isNaval()  (net.sf.freecol.common.model)
            UnitType.isNaval()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
        FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
            FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FreeColObject.getAbilities(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
                    FeatureContainer.allAbilities(Stream<Ability>)  (net.sf.freecol.common.model)
        Player.atWarWith(Player)  (net.sf.freecol.common.model)
            Player.getStance(Player)  (net.sf.freecol.common.model)
                FreeColObject.getId()(2 usages)  (net.sf.freecol.common.model)
        Unit.isOffensiveUnit()  (net.sf.freecol.common.model)
            UnitType.isOffensive()  (net.sf.freecol.common.model)
                UnitType.getBaseOffence()  (net.sf.freecol.common.model)
            Unit.getRole()  (net.sf.freecol.common.model)
            Role.isOffensive()  (net.sf.freecol.common.model)
                FreeColObject.hasModifier(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasModifier(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
        Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
            Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                Tile.getMap()  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()  (net.sf.freecol.common.model)
                    Game.getMap()  (net.sf.freecol.common.model)
                Map.getCircleTiles(Tile, boolean, int)  (net.sf.freecol.common.model)
                    Map.getCircleIterator(Tile, boolean, int)  (net.sf.freecol.common.model)
        UnitLocation.getUnits()  (net.sf.freecol.common.model)
            Colony.getUnits()  (net.sf.freecol.common.model)
                Colony.getCurrentWorkLocations()  (net.sf.freecol.common.model)
                    Colony.getCurrentWorkLocationsList()  (net.sf.freecol.common.model)
                UnitLocation.getUnits()  (net.sf.freecol.common.model)
                    Colony.getUnits()  (net.sf.freecol.common.model)
                CollectionUtils.flatten(Stream<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
                    CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
                    CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
        CollectionUtils.flatten(Collection<T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
            CollectionUtils.alwaysTrue()  (net.sf.freecol.common.util)
            CollectionUtils.flatten_internal(Stream<T>, Predicate<? super T>, Function<? super T, ? extends Stream<? extends R>>)  (net.sf.freecol.common.util)
        CollectionUtils.any(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
            CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
        Tile.isDangerousToShip(Unit)  (net.sf.freecol.common.model)
            Unit.getOwner()  (net.sf.freecol.common.model)
            Tile.getSettlement()  (net.sf.freecol.common.model)
            Player.owns(Ownable)  (net.sf.freecol.common.model)
                Ownable.getOwner()  (net.sf.freecol.common.model)
                    Unit.getOwner()  (net.sf.freecol.common.model)
                    TradeRoute.getOwner()  (net.sf.freecol.common.model)
                    Settlement.getOwner()  (net.sf.freecol.common.model)
                    WorkLocation.getOwner()  (net.sf.freecol.common.model)
                    Goods.getOwner()  (net.sf.freecol.common.model)
                    Tile.getOwner()  (net.sf.freecol.common.model)
                    GoodsContainer.getOwner()  (net.sf.freecol.common.model)
                    Market.getOwner()  (net.sf.freecol.common.model)
                    Europe.getOwner()  (net.sf.freecol.common.model)
                FreeColGameObject.equals(Object)  (net.sf.freecol.common.model)
                    FreeColGameObject.getGame()(2 usages)  (net.sf.freecol.common.model)
                    FreeColObject.equals(Object)  (net.sf.freecol.common.model)
                    Game.equals(Object)  (net.sf.freecol.common.model)
                    TradeItem.equals(Object)  (net.sf.freecol.common.model)
                    TradeRouteStop.equals(Object)  (net.sf.freecol.common.model)
                    ServerGame.equals(Object)  (net.sf.freecol.server.model)
                    UnitTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoldTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    GoodsTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    StanceTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    ColonyTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    InciteTradeItem.equals(Object)  (net.sf.freecol.common.model)
                    NativeTradeItem.equals(Object)  (net.sf.freecol.common.model)
            Settlement.canBombardEnemyShip()  (net.sf.freecol.common.model)
                Settlement.isLandLocked()  (net.sf.freecol.common.model)
                    Tile.isLandLocked()  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
            Settlement.getOwner()  (net.sf.freecol.common.model)
            Player.atWarWith(Player)  (net.sf.freecol.common.model)
                Player.getStance(Player)  (net.sf.freecol.common.model)
                    FreeColObject.getId()(2 usages)  (net.sf.freecol.common.model)
            FreeColObject.hasAbility(String)  (net.sf.freecol.common.model)
                FreeColObject.hasAbility(String, FreeColSpecObjectType)  (net.sf.freecol.common.model)
                    FreeColObject.hasAbility(String, FreeColSpecObjectType, Turn)  (net.sf.freecol.common.model)
            Tile.getSurroundingTiles(int, int)  (net.sf.freecol.common.model)
                Tile.getSurroundingTiles(int)(2 usages)  (net.sf.freecol.common.model)
                    Tile.getMap()  (net.sf.freecol.common.model)
                    Map.getCircleTiles(Tile, boolean, int)  (net.sf.freecol.common.model)
            CollectionUtils.any(Collection<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
                CollectionUtils.any_internal(Stream<T>, Predicate<? super T>)  (net.sf.freecol.common.util)
