Clustering.getNumClusters()(3 usages)  (cc.mallet.cluster)
GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
    Clustering.getNumInstances()  (cc.mallet.cluster)
    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
    Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
        Clustering.size(int)  (cc.mallet.cluster)
    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
    ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
        ClusterUtils.copyWithNewLabels(Clustering)  (cc.mallet.cluster.util)
            Clustering.getLabels()  (cc.mallet.cluster)
            Clustering.getInstances()  (cc.mallet.cluster)
            Clustering.getNumClusters()  (cc.mallet.cluster)
            Clustering.Clustering(InstanceList, int, int[])  (cc.mallet.cluster)
        ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
            Clustering.getInstances()  (cc.mallet.cluster)
            Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
            Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
            Clustering.getNumClusters()  (cc.mallet.cluster)
            Clustering.setNumLabels(int)  (cc.mallet.cluster)
    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
            Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
            ArrayUtils.append(int[], int[])  (cc.mallet.util)
    NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
        RandomEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            Randoms.nextUniform(double, double)  (cc.mallet.util)
                Randoms.nextUniform()  (cc.mallet.util)
        ClassifyingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            Classifier.classify(Object)  (cc.mallet.classify)
                Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                    C45.classify(Instance)  (cc.mallet.classify)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVector.getAlphabet()  (cc.mallet.types)
                        Pipe.getDataAlphabet()  (cc.mallet.pipe)
                        C45.getLeaf(Node, FeatureVector)  (cc.mallet.classify)
                        Node in C45.getGainRatio()  (cc.mallet.classify)
                        GainRatio.getBaseLabelDistribution()  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    ConfidencePredictingClassifier.classify(Instance)  (cc.mallet.classify)
                        Classifier.classify(Instance)  (cc.mallet.classify)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()(8 usages)  (cc.mallet.classify)
                        LabelVector.getBestIndex()  (cc.mallet.types)
                        SparseVector.numLocations()(2 usages)  (cc.mallet.types)
                        FeatureVector.value(Object)(5 usages)  (cc.mallet.types)
                        Classification.bestLabelIsCorrect()  (cc.mallet.classify)
                        LabelVector.getBestLabel()(2 usages)  (cc.mallet.types)
                        Label.toString()(2 usages)  (cc.mallet.types)
                        LabelVector.getLabelAlphabet()  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    MostFrequentClassifier.classify(Instance)  (cc.mallet.classify)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    MCMaxEnt.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        MCMaxEnt.getClassificationScores(Instance, double[])  (cc.mallet.classify)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    MaxEnt.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        MaxEnt.getClassificationScores(Instance, double[])  (cc.mallet.classify)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                        RankMaxEnt.classify(Instance)  (cc.mallet.classify)
                    RandomClassifier.classify(Instance)  (cc.mallet.classify)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    Winnow.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVector.getAlphabet()  (cc.mallet.types)
                        Pipe.getDataAlphabet()  (cc.mallet.pipe)
                        SparseVector.numLocations()  (cc.mallet.types)
                        SparseVector.indexAtLocation(int)  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    DecisionTree.classify(Instance)  (cc.mallet.classify)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVector.getAlphabet()  (cc.mallet.types)
                        Pipe.getDataAlphabet()  (cc.mallet.pipe)
                        DecisionTree.getLeaf(Node, FeatureVector)  (cc.mallet.classify)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    AdaBoostM2.classify(Instance)  (cc.mallet.classify)
                        AdaBoostM2.classify(Instance, int)  (cc.mallet.classify)
                    TokenClassifiers in AddClassifierTokenPredictions.classify(Instance)  (cc.mallet.pipe)
                        TokenClassifiers in AddClassifierTokenPredictions.classify(Instance, boolean)  (cc.mallet.pipe)
                    BaggingClassifier.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        Classifier.classify(Instance)  (cc.mallet.classify)
                        Classification.getLabeling()  (cc.mallet.classify)
                        Labeling.addTo(double[])  (cc.mallet.types)
                        MatrixOps.normalize(double[])  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    PRAuxClassifier.classify(Instance)  (cc.mallet.classify)
                        PRAuxClassifier.getClassificationScores(Instance, double[])  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()  (cc.mallet.classify)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    BalancedWinnow.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()(2 usages)  (cc.mallet.types)
                        Classifier.getAlphabet()  (cc.mallet.classify)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVector.getAlphabet()  (cc.mallet.types)
                        Pipe.getDataAlphabet()  (cc.mallet.pipe)
                        SparseVector.numLocations()  (cc.mallet.types)
                        SparseVector.indexAtLocation(int)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                        MatrixOps.timesEquals(double[], double)  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    ClassifierEnsemble.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        Classifier.classify(Instance)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        SparseVector.addTo(double[], double)  (cc.mallet.types)
                        ClassifierEnsemble.expNormalize(double[])  (cc.mallet.classify)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    AdaBoost.classify(Instance)  (cc.mallet.classify)
                        AdaBoost.classify(Instance, int)  (cc.mallet.classify)
                    NaiveBayes.classify(Instance)  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()(2 usages)  (cc.mallet.classify)
                        Alphabet.size()  (cc.mallet.types)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVector.getAlphabet()  (cc.mallet.types)
                        Pipe.getDataAlphabet()  (cc.mallet.pipe)
                        SparseVector.numLocations()  (cc.mallet.types)
                        Logged in Multinomial.addLogProbabilities(double[])  (cc.mallet.types)
                        SparseVector.indexAtLocation(int)  (cc.mallet.types)
                        Multinomial.size()  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                        Logged in Multinomial.logProbability(int)  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, double[])  (cc.mallet.types)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                    RankMaxEnt.classify(Instance)  (cc.mallet.classify)
                        Instance.getData()  (cc.mallet.types)
                        FeatureVectorSequence.size()  (cc.mallet.types)
                        RankMaxEnt.getClassificationScores(Instance, double[])  (cc.mallet.classify)
                        Classifier.getLabelAlphabet()  (cc.mallet.classify)
                        RankMaxEnt.createLabelVector(LabelAlphabet, double[])  (cc.mallet.classify)
                        Classification.Classification(Instance, Classifier, Labeling)  (cc.mallet.classify)
                Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Pipe.instancesFrom(Instance)  (cc.mallet.pipe)
                        SingleInstanceIterator.SingleInstanceIterator(Instance)  (cc.mallet.types)
                        Pipe.instancesFrom(Iterator<Instance>)  (cc.mallet.pipe)
            Classification.getLabelVector()  (cc.mallet.classify)
                Labeling.toLabelVector()  (cc.mallet.types)
                    Label.toLabelVector()  (cc.mallet.types)
                        LabelVector.LabelVector(LabelAlphabet, int[], double[])  (cc.mallet.types)
                    LabelVector.toLabelVector()  (cc.mallet.types)
            FeatureVector.value(Object)  (cc.mallet.types)
                FeatureVector.location(Object)  (cc.mallet.types)
                    Alphabet.lookupIndex(Object, boolean)  (cc.mallet.types)
                        LabelAlphabet.lookupIndex(Object, boolean)  (cc.mallet.types)
                    SparseVector.location(int)  (cc.mallet.types)
                        IndexedSparseVector.location(int)  (cc.mallet.types)
                        AugmentableFeatureVector.location(int)  (cc.mallet.types)
                SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    AugmentableFeatureVector.valueAtLocation(int)  (cc.mallet.types)
                        AugmentableFeatureVector.sortIndices()  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
            RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
            PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                    Minimum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.min(double[])  (cc.mallet.types)
                    Average in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.mean(double[])  (cc.mallet.types)
                    Maximum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.max(double[])  (cc.mallet.types)
        RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
        MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
            AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
            Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
            MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                    ArrayUtils.append(int[], int[])  (cc.mallet.util)
            MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                Clustering.getNumInstances()  (cc.mallet.cluster)
                PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                Classifier.classify(Object)  (cc.mallet.classify)
                    Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        C45.classify(Instance)  (cc.mallet.classify)
                        ConfidencePredictingClassifier.classify(Instance)  (cc.mallet.classify)
                        MostFrequentClassifier.classify(Instance)  (cc.mallet.classify)
                        MCMaxEnt.classify(Instance)  (cc.mallet.classify)
                        MaxEnt.classify(Instance)  (cc.mallet.classify)
                        RandomClassifier.classify(Instance)  (cc.mallet.classify)
                        Winnow.classify(Instance)  (cc.mallet.classify)
                        DecisionTree.classify(Instance)  (cc.mallet.classify)
                        AdaBoostM2.classify(Instance)  (cc.mallet.classify)
                        TokenClassifiers in AddClassifierTokenPredictions.classify(Instance)  (cc.mallet.pipe)
                        BaggingClassifier.classify(Instance)  (cc.mallet.classify)
                        PRAuxClassifier.classify(Instance)  (cc.mallet.classify)
                        BalancedWinnow.classify(Instance)  (cc.mallet.classify)
                        ClassifierEnsemble.classify(Instance)  (cc.mallet.classify)
                        AdaBoost.classify(Instance)  (cc.mallet.classify)
                        NaiveBayes.classify(Instance)  (cc.mallet.classify)
                        RankMaxEnt.classify(Instance)  (cc.mallet.classify)
                    Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                    Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                        Pipe.instancesFrom(Instance)  (cc.mallet.pipe)
                Classification.getLabelVector()  (cc.mallet.classify)
                    Labeling.toLabelVector()  (cc.mallet.types)
                        Label.toLabelVector()  (cc.mallet.types)
                        LabelVector.toLabelVector()  (cc.mallet.types)
                FeatureVector.value(Object)  (cc.mallet.types)
                    FeatureVector.location(Object)  (cc.mallet.types)
                        Alphabet.lookupIndex(Object, boolean)  (cc.mallet.types)
                        SparseVector.location(int)  (cc.mallet.types)
                    SparseVector.valueAtLocation(int)  (cc.mallet.types)
                        AugmentableFeatureVector.valueAtLocation(int)  (cc.mallet.types)
                PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
        PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
            AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
            AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                    ArrayUtils.append(int[], int[])  (cc.mallet.util)
            PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                Clustering.getNumInstances()  (cc.mallet.cluster)
                PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                Classifier.classify(Object)  (cc.mallet.classify)
                    Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        C45.classify(Instance)  (cc.mallet.classify)
                        ConfidencePredictingClassifier.classify(Instance)  (cc.mallet.classify)
                        MostFrequentClassifier.classify(Instance)  (cc.mallet.classify)
                        MCMaxEnt.classify(Instance)  (cc.mallet.classify)
                        MaxEnt.classify(Instance)  (cc.mallet.classify)
                        RandomClassifier.classify(Instance)  (cc.mallet.classify)
                        Winnow.classify(Instance)  (cc.mallet.classify)
                        DecisionTree.classify(Instance)  (cc.mallet.classify)
                        AdaBoostM2.classify(Instance)  (cc.mallet.classify)
                        TokenClassifiers in AddClassifierTokenPredictions.classify(Instance)  (cc.mallet.pipe)
                        BaggingClassifier.classify(Instance)  (cc.mallet.classify)
                        PRAuxClassifier.classify(Instance)  (cc.mallet.classify)
                        BalancedWinnow.classify(Instance)  (cc.mallet.classify)
                        ClassifierEnsemble.classify(Instance)  (cc.mallet.classify)
                        AdaBoost.classify(Instance)  (cc.mallet.classify)
                        NaiveBayes.classify(Instance)  (cc.mallet.classify)
                        RankMaxEnt.classify(Instance)  (cc.mallet.classify)
                    Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                    Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                        Pipe.instancesFrom(Instance)  (cc.mallet.pipe)
                Classification.getLabelVector()  (cc.mallet.classify)
                    Labeling.toLabelVector()  (cc.mallet.types)
                        Label.toLabelVector()  (cc.mallet.types)
                        LabelVector.toLabelVector()  (cc.mallet.types)
                FeatureVector.value(Object)  (cc.mallet.types)
                    FeatureVector.location(Object)  (cc.mallet.types)
                        Alphabet.lookupIndex(Object, boolean)  (cc.mallet.types)
                        SparseVector.location(int)  (cc.mallet.types)
                    SparseVector.valueAtLocation(int)  (cc.mallet.types)
                        AugmentableFeatureVector.valueAtLocation(int)  (cc.mallet.types)
                PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                Minimum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                    MatrixOps.min(double[])  (cc.mallet.types)
                Average in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                    MatrixOps.mean(double[])  (cc.mallet.types)
                Maximum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                    MatrixOps.max(double[])  (cc.mallet.types)
    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
Clustering.size(int)(2 usages)  (cc.mallet.cluster)
GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
    Clustering.getNumInstances()  (cc.mallet.cluster)
    Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
        Clustering.size(int)  (cc.mallet.cluster)
    PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
    Clustering.getInstances()  (cc.mallet.cluster)
    Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
    Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
    Clustering.getNumClusters()  (cc.mallet.cluster)
    Clustering.setNumLabels(int)  (cc.mallet.cluster)
GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
    GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
        Clustering.getNumInstances()  (cc.mallet.cluster)
        GreedyAgglomerativeByDensity.fillUnclusteredInstances(int)  (cc.mallet.cluster)
    Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
    GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
        Clustering.getNumInstances()  (cc.mallet.cluster)
        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
        Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
            Clustering.size(int)  (cc.mallet.cluster)
        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
            PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
        ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
            ClusterUtils.copyWithNewLabels(Clustering)  (cc.mallet.cluster.util)
                Clustering.getLabels()  (cc.mallet.cluster)
                Clustering.getInstances()  (cc.mallet.cluster)
                Clustering.getNumClusters()  (cc.mallet.cluster)
                Clustering.Clustering(InstanceList, int, int[])  (cc.mallet.cluster)
            ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                Clustering.getInstances()  (cc.mallet.cluster)
                Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                Clustering.getNumClusters()  (cc.mallet.cluster)
                Clustering.setNumLabels(int)  (cc.mallet.cluster)
        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
            AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                ArrayUtils.append(int[], int[])  (cc.mallet.util)
        NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            RandomEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                Randoms.nextUniform(double, double)  (cc.mallet.util)
                    Randoms.nextUniform()  (cc.mallet.util)
            ClassifyingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                Classifier.classify(Object)  (cc.mallet.classify)
                    Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        C45.classify(Instance)  (cc.mallet.classify)
                        ConfidencePredictingClassifier.classify(Instance)  (cc.mallet.classify)
                        MostFrequentClassifier.classify(Instance)  (cc.mallet.classify)
                        MCMaxEnt.classify(Instance)  (cc.mallet.classify)
                        MaxEnt.classify(Instance)  (cc.mallet.classify)
                        RandomClassifier.classify(Instance)  (cc.mallet.classify)
                        Winnow.classify(Instance)  (cc.mallet.classify)
                        DecisionTree.classify(Instance)  (cc.mallet.classify)
                        AdaBoostM2.classify(Instance)  (cc.mallet.classify)
                        TokenClassifiers in AddClassifierTokenPredictions.classify(Instance)  (cc.mallet.pipe)
                        BaggingClassifier.classify(Instance)  (cc.mallet.classify)
                        PRAuxClassifier.classify(Instance)  (cc.mallet.classify)
                        BalancedWinnow.classify(Instance)  (cc.mallet.classify)
                        ClassifierEnsemble.classify(Instance)  (cc.mallet.classify)
                        AdaBoost.classify(Instance)  (cc.mallet.classify)
                        NaiveBayes.classify(Instance)  (cc.mallet.classify)
                        RankMaxEnt.classify(Instance)  (cc.mallet.classify)
                    Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                    Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                        Pipe.instancesFrom(Instance)  (cc.mallet.pipe)
                Classification.getLabelVector()  (cc.mallet.classify)
                    Labeling.toLabelVector()  (cc.mallet.types)
                        Label.toLabelVector()  (cc.mallet.types)
                        LabelVector.toLabelVector()  (cc.mallet.types)
                FeatureVector.value(Object)  (cc.mallet.types)
                    FeatureVector.location(Object)  (cc.mallet.types)
                        Alphabet.lookupIndex(Object, boolean)  (cc.mallet.types)
                        SparseVector.location(int)  (cc.mallet.types)
                    SparseVector.valueAtLocation(int)  (cc.mallet.types)
                        AugmentableFeatureVector.valueAtLocation(int)  (cc.mallet.types)
                RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Minimum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Average in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Maximum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
            RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
            MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
            PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                    Minimum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.min(double[])  (cc.mallet.types)
                    Average in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.mean(double[])  (cc.mallet.types)
                    Maximum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        MatrixOps.max(double[])  (cc.mallet.types)
        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
            PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
    GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
        GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
            Clustering.getNumInstances()  (cc.mallet.cluster)
            GreedyAgglomerativeByDensity.fillUnclusteredInstances(int)  (cc.mallet.cluster)
        Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
        GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
            Clustering.getNumInstances()  (cc.mallet.cluster)
            PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
            Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                Clustering.size(int)  (cc.mallet.cluster)
            PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                ClusterUtils.copyWithNewLabels(Clustering)  (cc.mallet.cluster.util)
                    Clustering.getLabels()  (cc.mallet.cluster)
                    Clustering.getInstances()  (cc.mallet.cluster)
                    Clustering.getNumClusters()  (cc.mallet.cluster)
                    Clustering.Clustering(InstanceList, int, int[])  (cc.mallet.cluster)
                ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                    Clustering.getInstances()  (cc.mallet.cluster)
                    Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                    Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                    Clustering.getNumClusters()  (cc.mallet.cluster)
                    Clustering.setNumLabels(int)  (cc.mallet.cluster)
            AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                    ArrayUtils.append(int[], int[])  (cc.mallet.util)
            NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                RandomEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Randoms.nextUniform(double, double)  (cc.mallet.util)
                        Randoms.nextUniform()  (cc.mallet.util)
                ClassifyingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Classifier.classify(Object)  (cc.mallet.classify)
                        Classifier.classify(Instance)(2 usages)  (cc.mallet.classify)
                        Instance.Instance(Object, Object, Object, Object)  (cc.mallet.types)
                        Pipe.instanceFrom(Instance)  (cc.mallet.pipe)
                    Classification.getLabelVector()  (cc.mallet.classify)
                        Labeling.toLabelVector()  (cc.mallet.types)
                    FeatureVector.value(Object)  (cc.mallet.types)
                        FeatureVector.location(Object)  (cc.mallet.types)
                        SparseVector.valueAtLocation(int)  (cc.mallet.types)
                    RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)  (cc.mallet.cluster.neighbor_evaluator)
                PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Minimum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Average in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                        Maximum in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
            PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
        GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
            GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
                Clustering.getNumInstances()  (cc.mallet.cluster)
                GreedyAgglomerativeByDensity.fillUnclusteredInstances(int)  (cc.mallet.cluster)
            Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
            GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
                Clustering.getNumInstances()  (cc.mallet.cluster)
                PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                    Clustering.size(int)  (cc.mallet.cluster)
                PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                    ClusterUtils.copyWithNewLabels(Clustering)  (cc.mallet.cluster.util)
                        Clustering.getLabels()  (cc.mallet.cluster)
                        Clustering.getInstances()  (cc.mallet.cluster)
                        Clustering.getNumClusters()  (cc.mallet.cluster)
                        Clustering.Clustering(InstanceList, int, int[])  (cc.mallet.cluster)
                    ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                        Clustering.getInstances()  (cc.mallet.cluster)
                        Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                        Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                        Clustering.getNumClusters()  (cc.mallet.cluster)
                        Clustering.setNumLabels(int)  (cc.mallet.cluster)
                AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.Neighbor(Clustering, Clustering)  (cc.mallet.cluster.neighbor_evaluator)
                        ArrayUtils.append(int[], int[])  (cc.mallet.util)
                NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    RandomEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Randoms.nextUniform(double, double)  (cc.mallet.util)
                    ClassifyingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Classifier.classify(Object)  (cc.mallet.classify)
                        Classification.getLabelVector()  (cc.mallet.classify)
                        FeatureVector.value(Object)  (cc.mallet.types)
                        RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getOldClusters()  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getNewCluster()  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getCentroid(int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getScore(AgglomerativeNeighbor)(4 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.getMedWeights(int, int[], Clustering)(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        Neighbor.getOriginal()  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.getOldClusters()(2 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int, int)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseEvaluator.getScore(AgglomerativeNeighbor)(3 usages)  (cc.mallet.cluster.neighbor_evaluator)
                        CombiningStrategy in PairwiseEvaluator.combine(double[])  (cc.mallet.cluster.neighbor_evaluator)
                PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
                GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    GreedyAgglomerativeByDensity.fillUnclusteredInstances(int)  (cc.mallet.cluster)
                Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                    Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                        Clustering.size(int)  (cc.mallet.cluster)
                    PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                    ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                        ClusterUtils.copyWithNewLabels(Clustering)  (cc.mallet.cluster.util)
                        ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                    AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[][])  (cc.mallet.cluster.neighbor_evaluator)
                    NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        RandomEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        ClassifyingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        RankingNeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        MedoidEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                    PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
                    GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        GreedyAgglomerativeByDensity.fillUnclusteredInstances(int)  (cc.mallet.cluster)
                    Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                    GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        PairwiseMatrix.PairwiseMatrix(int)  (cc.mallet.cluster.util)
                        Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                        PairwiseMatrix.get(int, int)(2 usages)  (cc.mallet.cluster.util)
                        ClusterUtils.copyAndMergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                        AgglomerativeNeighbor.AgglomerativeNeighbor(Clustering, Clustering, int[], int[])  (cc.mallet.cluster.neighbor_evaluator)
                        NeighborEvaluator.evaluate(Neighbor)  (cc.mallet.cluster.neighbor_evaluator)
                        PairwiseMatrix.set(int, int, double)  (cc.mallet.cluster.util)
                    GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
                        GreedyAgglomerativeByDensity.sampleNextInstanceToCluster(Clustering)(2 usages)  (cc.mallet.cluster)
                        Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                        GreedyAgglomerative.getScore(Clustering, int, int)  (cc.mallet.cluster)
                        GreedyAgglomerativeByDensity.improveClustering(Clustering)  (cc.mallet.cluster)
                        Clustering.size(int)(2 usages)  (cc.mallet.cluster)
                        Clustering.getNumClusters()  (cc.mallet.cluster)
                        GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
                        ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                    Clustering.size(int)(2 usages)  (cc.mallet.cluster)
                    Clustering.getNumClusters()  (cc.mallet.cluster)
                    GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
                        Clustering.getNumInstances()  (cc.mallet.cluster)
                        Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                        PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
                    ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                        Clustering.getInstances()  (cc.mallet.cluster)
                        Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                        Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                        Clustering.getNumClusters()  (cc.mallet.cluster)
                        Clustering.setNumLabels(int)  (cc.mallet.cluster)
                Clustering.size(int)(2 usages)  (cc.mallet.cluster)
                Clustering.getNumClusters()  (cc.mallet.cluster)
                GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
                    Clustering.getNumInstances()  (cc.mallet.cluster)
                    Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                        Clustering.size(int)  (cc.mallet.cluster)
                    PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
                        PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
                ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                    Clustering.getInstances()  (cc.mallet.cluster)
                    Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                    Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                    Clustering.getNumClusters()  (cc.mallet.cluster)
                    Clustering.setNumLabels(int)  (cc.mallet.cluster)
            Clustering.size(int)(2 usages)  (cc.mallet.cluster)
            Clustering.getNumClusters()  (cc.mallet.cluster)
            GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
                Clustering.getNumInstances()  (cc.mallet.cluster)
                Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                    Clustering.size(int)  (cc.mallet.cluster)
                PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
                    PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
            ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
                Clustering.getInstances()  (cc.mallet.cluster)
                Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
                Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
                Clustering.getNumClusters()  (cc.mallet.cluster)
                Clustering.setNumLabels(int)  (cc.mallet.cluster)
        Clustering.size(int)(2 usages)  (cc.mallet.cluster)
        Clustering.getNumClusters()  (cc.mallet.cluster)
        GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
            Clustering.getNumInstances()  (cc.mallet.cluster)
            Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
                Clustering.size(int)  (cc.mallet.cluster)
            PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
                PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
        ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
            Clustering.getInstances()  (cc.mallet.cluster)
            Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
            Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
            Clustering.getNumClusters()  (cc.mallet.cluster)
            Clustering.setNumLabels(int)  (cc.mallet.cluster)
    Clustering.size(int)(2 usages)  (cc.mallet.cluster)
    Clustering.getNumClusters()  (cc.mallet.cluster)
    GreedyAgglomerative.updateScoreMatrix(Clustering, int, int)  (cc.mallet.cluster)
        Clustering.getNumInstances()  (cc.mallet.cluster)
        Clustering.getIndicesWithLabel(int)(2 usages)  (cc.mallet.cluster)
            Clustering.size(int)  (cc.mallet.cluster)
        PairwiseMatrix.set(int, int, double)(2 usages)  (cc.mallet.cluster.util)
            PairwiseMatrix.sort(int, int)  (cc.mallet.cluster.util)
    ClusterUtils.mergeClusters(Clustering, int, int)  (cc.mallet.cluster.util)
        Clustering.getInstances()  (cc.mallet.cluster)
        Clustering.getLabel(int)(2 usages)  (cc.mallet.cluster)
        Clustering.setLabel(int, int)(2 usages)  (cc.mallet.cluster)
        Clustering.getNumClusters()  (cc.mallet.cluster)
        Clustering.setNumLabels(int)  (cc.mallet.cluster)
