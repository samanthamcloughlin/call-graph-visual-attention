-> Project: "mallet"

-> For each method listed below:
	Step 1: "Start Tracking" on the itrace core as described to you by the study administrator.
	Step 2: Navigate to the method described using the path, method name, and line number; then inspect the project to understand the context as described in the instructions.
	Step 3: Write the description in the space provided. 
	Step 4: When satisfied with the description, "Stop Tracking" in the itrace core.
	Step 5: Move to the next method and repeat steps 1-4. Please, DO NOT edit any project files or source code.


-----------------------------------------------------------------------------------------------------
| 					Project Synopsis:  
| 			MALLET: MAchine Learning for LanguagE Toolkit
| MALLET is a Java-based package for statistical natural language processing, document classification, 
| clustering, topic modeling, information extraction, and other machine learning applications to text. 
-----------------------------------------------------------------------------------------------------

#####################################---CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session.
-----------------------------------------------------------------------------------------------------

	Method 1: mallet>regression>LinearRegression.java> predict [line 30]
	Description:
		The purpose is to make a prediction percentage based on each location.
		The method iterates through each location and tallies based on the parameter and current predicators. This is called to make a least squared regression.
		This is needed to mean squared error, and is a helper method for statistical use.

	
	Rate your confidence in the description on a scale of 1-5: 
	3
	

-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 2: mallet>regression>CoordinateDescent.java> toString [line 165]
	Description:
		This program prints a string of the data and the error value.
		It prints the training data and corresponding index through iteration and prints out the calculated squared error.
		This is used for any function that needs to look through the training data.

	Rate your confidence in the description on a scale of 1-5: 
		2


-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 3: mallet>types>SparseMatrixn.java> plusEquals [line 257]
	Description:
		This class supports addition of a multiple of another matrix.
		This class's implementation is based on the type of matrix so addition can be compaible and if not compatible, it will throw an error based on type or size.
		This is used as a helping method for addition of matrixes.


	Rate your confidence in the description on a scale of 1-5: 	
4


-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 4: mallet>types>InvertedIndex.java> InvertedIndex [line 17]
	Description:
		inverts each list of the instance list.
		It iterate through the instance list, makes an instance of each element, and invert the value of each element truncating any 0.
		This is an helper function to invert the elements in an 2d array.


	Rate your confidence in the description on a scale of 1-5: 
	3
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session |
-----------------------------------------------------------------------------------------------------
#####################################-RE-CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session |
-----------------------------------------------------------------------------------------------------

	Method 5: mallet>types>Multinomial.java> ensureCapacity [line 290]
	Description:
		This makes sure the capacity has sufficient size.
		The method doubled the count length, set size to index if index is greater and scaled the size by two until it is greater than index and made that into the new array after copying.
		This makes sure when adding new elements, there are sufficient space.

	Rate your confidence in the description on a scale of 1-5: 
	5
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------


	Method 6: mallet>optimize>OrthantWiseLimitedMemoryBFGS.java> optimize [line 100]
	Description:
		This function optimizes an object by gradient value, and checks if the optimization causes the function to converge.
		This method iterates for a specified amount and transforms the object to see if it meets the condiition of converging.
		This is used when training to see if the data training converges.

	Rate your confidence in the description on a scale of 1-5: 
	1
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------



	Method 7: mallet>types>FeatureInducer.java> induceFeaturesFor [line 179]
	Description:
		Parses through and modifies the featured list with their respective features.
		This method iterates through the ilist and adds it to featured list if has corresponding features.
		This can allow for certain testable data to be tested on
	Rate your confidence in the description on a scale of 1-5: 
	2
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 8: mallet>cluster>GreedyAgglomerative.java> improveClustering [line 61]
	Description:
		This finds the score of a certain cluster.
		It performs a scoring action with different combinations of different intigers and finds the best score. If the score converges, it prints the score and it merges clusters otherwise. 
		This is used to determine whether or not to merge clusters.

	Rate your confidence in the description on a scale of 1-5: 
	3
	
	

	
Congratulations, you have completed the project! Please remember to "Stop Tracking".

Please describe any issues you faced while completing tasks for this project:



Please call the administrator!
