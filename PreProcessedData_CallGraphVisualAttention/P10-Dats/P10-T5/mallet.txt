-> Project: "mallet"

-> For each method listed below:
	Step 1: "Start Tracking" on the itrace core as described to you by the study administrator.
	Step 2: Navigate to the method described using the path, method name, and line number; then inspect the project to understand the context as described in the instructions.
	Step 3: Write the description in the space provided. 
	Step 4: When satisfied with the description, "Stop Tracking" in the itrace core.
	Step 5: Move to the next method and repeat steps 1-4. Please, DO NOT edit any project files or source code.


-----------------------------------------------------------------------------------------------------
| 					Project Synopsis:  
| 			MALLET: MAchine Learning for LanguagE Toolkit
| MALLET is a Java-based package for statistical natural language processing, document classification, 
| clustering, topic modeling, information extraction, and other machine learning applications to text. 
-----------------------------------------------------------------------------------------------------

#####################################---CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session.
-----------------------------------------------------------------------------------------------------

	Method 1: mallet>regression>LinearRegression.java> predict [line 30]
	Description:
	This method provides prediction from the given instance in a linear regression.
	
	This method traverses on the feature vector by taking data from the instance, accumulating the parameter value and feature vector value from a certain index, and returns it.
	
	This method is used to predict for a sample in a linear regression model.
	
	
	
	Rate your confidence in the description on a scale of 1-5: 4
	

-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 2: mallet>cluster>GreedyAgglomerative.java> improveClustering [line 61]
	Description:
	This method checks if merging two clusters can improve the clustering.
	
	This method iterates over each cluster pair, checks merging them can yield to a better score or not, if the best score is not greater the stopping threshold, it merges them, and returns the best score.
	
	This method is used to improve clustering in different clustering example, for example, Hill Climbing Clustering.
	



	Rate your confidence in the description on a scale of 1-5: 3



-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 3: mallet>types>Multinomial.java> ensureCapacity [line 290]
	Description:
	This method ensures the capacity of the counts array of the Estimator class.
	
	This method checks if the length of counts array is smaller than the given index or not, if it is, the methods doubles the size of the count array to ensure the capacity.
	
	This method is used during estimate or incrementing with new data.



	Rate your confidence in the description on a scale of 1-5: 	3



-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 4: mallet>types>InvertedIndex.java> InvertedIndex [line 17]
	Description:
	This method indexes each instance to the corresponding feature.
	
	This method iterates over each instance, and add each instance to the list of the corresponding feature.
	
	This method can be useful in coordinate descent type regression model to find the instances from the feature list.



	Rate your confidence in the description on a scale of 1-5: 3
	
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session |
-----------------------------------------------------------------------------------------------------
#####################################-RE-CALIBRATION REQUIRED---####################################
-----------------------------------------------------------------------------------------------------
|   Note: Start a new tracking session |
-----------------------------------------------------------------------------------------------------

	Method 5: mallet>types>FeatureInducer.java> induceFeaturesFor [line 179]
	Description:
	This method induces the features to a Feature conjunction list.
	
	This method checks if each instance is AugmentableFeatureVector or FeatureVectorSequence, if it is AugmentableFeatureVector, it adds to the Feature conjunction list; otherwise traverses to the FeatureVectorSequence and adds one by one from the sequence.
	
	This method can be used for prediction or training with feature induction.



	Rate your confidence in the description on a scale of 1-5: 2
	
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------


	Method 6:  mallet>optimize>OrthantWiseLimitedMemoryBFGS.java> optimize [line 100]
	Description:
	This method performs optimizing based on Orthant Wise Limited Memory BFGS optimizer.
	
	This method does the following in each iteration: makeSteepestDescDir, mapDirByInverseHessian, fixDirSigns, storeSrcInDest, backTrackingLineSearch, evalGradient, and checks termination conditions; if it is in any condition, it returns converge as true, otherwise false.
	
	This method is used to perform optimizing  based on Orthant Wise Limited Memory BFGS optimizer in different training algorithm.


	Rate your confidence in the description on a scale of 1-5: 2
	
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------



	Method 7: mallet>regression>CoordinateDescent.java> toString [line 165]
	Description:
	This method prints the information for an intercept index and sum Squared Error (SSE).
	
	This method traverses through each sample in the training set, calculate the sum Squared Error (SSE), and creates a string buffer to have the information about the parameters, training data and SSE value.
	
	This method is used to have log information about the data.



	Rate your confidence in the description on a scale of 1-5: 3
	
	
	
-----------------------------------------------------------------------------------------------------
|   Note: You MUST stop tracking session and start a new one before moving on to the next method.   |
-----------------------------------------------------------------------------------------------------

	Method 8: mallet>types>SparseMatrixn.java> plusEquals [line 257]
	Description:
	This method pluses the member sparse vector object with another Constant Matrix object scaling with a factor.
	
	This method first checks if the ConstantMatrix is a sparse vector or not; if it is, then it pluses with the vector; otherwise, this method checks the size and types of the input matrix, and then proceeds to plus the matrix with the member sparse vector.
	
	
	This method helps to check the type and size before pluses the member sparse vector with a constant matrix.



	Rate your confidence in the description on a scale of 1-5: 3
	
	
	

	
Congratulations, you have completed the project! Please remember to "Stop Tracking".

Please describe any issues you faced while completing tasks for this project:



Please call the administrator!
